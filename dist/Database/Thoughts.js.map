{
  "version": 3,
  "sources": [
    "Thoughts.js"
  ],
  "names": [
    "Thoughts",
    "options",
    "r",
    "connection",
    "open",
    "builder",
    "blueprints",
    "schema",
    "table",
    "callback",
    "object",
    "keys",
    "rdb",
    "_hasOne",
    "_hasMany",
    "_belongsTo",
    "_belongsToMany",
    "params",
    "excepts",
    "console",
    "base",
    "cmd",
    "Object",
    "length",
    "merge",
    "relations",
    "forEach",
    "push",
    "single",
    "get",
    "e",
    "default",
    "many",
    "getAll",
    "coerceTo",
    "without",
    "id",
    "obj",
    "validate",
    "validation",
    "error",
    "insert",
    "update",
    "delete",
    "fk",
    "foreign",
    "name",
    "fn",
    "Error",
    "Proxy",
    "apply",
    "arg",
    "args"
  ],
  "mappings": "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",
  "file": "Thoughts.js",
  "sourceRoot": "../../src/Database",
  "sourcesContent": [
    "import r from './rethink'\nimport Builder from './Builder'\nimport Private from 'private-props'\nimport joi from 'joi'\n\nexport default class Thoughts {\n\tconstructor(options) {\n\t\tPrivate(this).r = new r(options)\n\t\tPrivate(this).connection = Private(this).r.open()\n\t\tPrivate(this).builder = new Builder(Private(this).connection)\n\t\tPrivate(this).blueprints = []\n\t\tPrivate(this).schema = {}\n\t}\n\n\tcreateModel(table, callback) {\n\t\tPrivate(this).schema = joi.object().keys(callback(joi))\n\t\tconst rdb = Private(this).r\n\t\tconst schema = Private(this).schema\n\n\t\treturn class {\n\t\t\tconstructor() {\n        this.table = table\n        this._hasOne = []\n        this._hasMany = []\n        this._belongsTo = []\n        this._belongsToMany = []\n\t\t\t}\n\n\t\t\tall(params = {}) {\n\t\t\t\tconst excepts = []\n\n\t\t\t\treturn rdb.console(cmd => {\n          let base = cmd.table(table)\n\n          if (Object.keys(this._hasOne).length || Object.keys(this._hasMany).length) {\n            base = base.merge(e => {\n              let relations = {}\n\n              this._hasOne.forEach(single => {\n              \texcepts.push(single.table + '_id')\n                \n                relations[single.table] = cmd\n                \t.table(single.table)\n                \t.get(e(single.table + '_id'))\n                \t.default({})\n              })\n\n              this._hasMany.forEach(many => {\n              \texcepts.push(many.table + '_id')\n              \t\n              \trelations[many.table] = cmd\n              \t\t.table(many.table)\n              \t\t.getAll(e(many.table + '_id'))\n              \t\t.coerceTo('array').default([])\n              })\n\n              return relations\n            })\n          }\n\n          return base.without(excepts).coerceTo('array')\n        })\n\t\t\t}\n\n\t\t\tget(id) {\n\t\t\t\treturn rdb.console(cmd => \n\t\t\t\t\tcmd.table(table).get(id)\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tasync create(obj) {\n\t\t\t\tconst validation = await joi.validate(obj, schema)\n\n\t\t\t\tif (validation.error) {\n\t\t\t\t\treturn validation.error\n\t\t\t\t}\n\n\t\t\t\treturn rdb.console(cmd => \n\t\t\t\t\tcmd.table(table).insert(obj)\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tupdate(id) {\n\t\t\t\treturn rdb.console(cmd =>\n\t\t\t\t\tcmd.table(table).get(obj.id).update(obj)\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tdelete(id) {\n\t\t\t\treturn rdb.console(cmd =>\n\t\t\t\t\tcmd.table(table).get(id).delete()\n\t\t\t\t)\n\t\t\t}\n\n\t\t\thasOne(table, fk) {\n\t\t\t\tthis._hasOne.push({\n\t\t\t\t\ttable,\n\t\t\t\t\tforeign: fk || table + '_id'\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thasMany(table, fk) {\n\t\t\t\tthis._hasMany.push({\n\t\t\t\t\ttable,\n\t\t\t\t\tforeign: fk || table + '_id'\n\t\t\t\t})\n\t\t\t}\n\n\t\t\textendModel(name, fn) {\n\t\t\t\tif(this[name]) {\n          throw new Error(`${name} already exist in ${table} class`)\n        }          \n\n\t\t\t\tthis[name] = new Proxy(fn, {\n\t\t\t\t\tapply: function apply(fn, arg, args) {\n\t\t\t\t\t\treturn rdb.console(cmd => \n\t\t\t\t\t\t\tfn(cmd.table(table), ...args)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole(callback) {\n\t\treturn Private(this).r.console(callback)\n\t}\n\n\t// blueprint(table, Callback) {\n\t// \tconst blueprint = {}\n\n\t// \tconst fns = {\n\t// \t\tprimaryKey(name) {\n\t// \t\t\tblueprint.primaryKey = name\n\t// \t\t},\n\n\t// \t\tindex(name) {\n\t// \t\t\tblueprint.indices.push(name)\n\t// \t\t}\n\t// \t}\n\n\t// \tCallback = new Callback\n\t\t\n\t// \tblueprint.up = Callback.up.bind(fns)\n\t// \tblueprint.down = Callback.down.bind()\n\n\t// \tPrivate(this).blueprints.push(blueprint)\n\t// }\n\n\t// up() {\n\t// \t\t\t// const opts = keys.primaryKey\n\t// \t// \t? {\n\t// \t// \t\tprimaryKey: keys.primaryKey\n\t// \t// \t}\n\t// \t// \t: {}\n\t\t\n\t// \t// await Private(this).builder.create(table, opts)\n\n\t// \t// keys.indices.forEach(index => {\n\t// \t// \tPrivate(this).builder.index(table, index)\n\t// \t// })\n\t// }\n}"
  ]
}
